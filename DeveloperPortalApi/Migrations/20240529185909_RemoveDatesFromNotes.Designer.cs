// <auto-generated />
using System;
using DeveloperPortalApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeveloperPortalApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240529185909_RemoveDatesFromNotes")]
    partial class RemoveDatesFromNotes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeveloperPortalApi.Entities.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("MessageTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("auth0Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ChatMessages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdeac4ba-9960-4c30-bbaa-791c4252bec8"),
                            Message = "Hey developer, leuk dat je er bent!",
                            MessageTime = new DateTimeOffset(new DateTime(2024, 4, 7, 16, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            Username = "Matthijs",
                            auth0Id = "auth0|661834a129d6402ebd9baa0c"
                        },
                        new
                        {
                            Id = new Guid("b9250775-52ee-445a-b75b-e3e825c3decc"),
                            Message = "Hey Matthijs, fijn dat ik er ben!",
                            MessageTime = new DateTimeOffset(new DateTime(2024, 4, 7, 16, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            Username = "Developer",
                            auth0Id = "auth0|661834a129d6402ebd9baa0c"
                        });
                });

            modelBuilder.Entity("DeveloperPortalApi.Entities.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("auth0Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("790a4aa5-ed1f-4f42-9d2d-3a6dd9bc1014"),
                            Content = "Applicatie afmaken!",
                            Username = "Matthijs",
                            auth0Id = "auth0|661834a129d6402ebd9baa0c"
                        },
                        new
                        {
                            Id = new Guid("1a38a3c0-d856-49b3-be01-99e9cbf24478"),
                            Content = "Sell the application!",
                            Username = "Developer",
                            auth0Id = "auth0|661834a129d6402ebd9baa0c"
                        });
                });

            modelBuilder.Entity("DeveloperPortalApi.Entities.PokerVote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Vote")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("auth0Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PokerVotes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b95b7e26-e4fb-4b0e-8859-6d77f174aae5"),
                            Username = "Matthijs Meijboom",
                            Vote = "☕",
                            auth0Id = "auth0|661834a129d6402ebd9baa0c"
                        },
                        new
                        {
                            Id = new Guid("0997ac68-85c3-44bf-b78b-1cde8b46c5c4"),
                            Username = "Developer",
                            Vote = "8",
                            auth0Id = "auth0|661834a129d6402ebd9baa0c"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
